{"version":3,"file":"static/js/22.2f92f3a4.chunk.js","mappings":"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","sources":["webpack://portfolio123/./src/components/main/contact/Contact.module.scss?b3af","components/main/contact/Contact.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/react-useportal/usePortal.ts","../node_modules/use-ssr/dist/useSSR.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contact_contacts__6rF0s\",\"contacts__container\":\"Contact_contacts__container__a5nvf\",\"contacts__content\":\"Contact_contacts__content__4JDOo\",\"contacts__text_container\":\"Contact_contacts__text_container__cam8I\",\"contacts__title\":\"Contact_contacts__title__ZJBqv\",\"animateTitle\":\"Contact_animateTitle__Lsm2-\",\"contacts__text\":\"Contact_contacts__text__GWKxA\",\"contacts__form_container\":\"Contact_contacts__form_container__CyjiU\",\"switcher_container\":\"Contact_switcher_container__sCNvS\",\"switcher\":\"Contact_switcher__TI7ki\",\"contacts__form\":\"Contact_contacts__form__BODwv\",\"contacts__block_input\":\"Contact_contacts__block_input__7-Rrl\",\"animateInput\":\"Contact_animateInput__mO7Em\",\"animateHeight\":\"Contact_animateHeight__poTpU\",\"animateTextarea\":\"Contact_animateTextarea__D50uI\",\"contacts__input_name\":\"Contact_contacts__input_name__MvGif\",\"contacts__label_name\":\"Contact_contacts__label_name__jGvwy\",\"placeholder\":\"Contact_placeholder__jtjN+\",\"contacts__input_email\":\"Contact_contacts__input_email__mGTL+\",\"contacts__label_email\":\"Contact_contacts__label_email__3-PNT\",\"contacts__label_message\":\"Contact_contacts__label_message__ftXM5\",\"contacts__textarea\":\"Contact_contacts__textarea__Bcz0N\",\"contacts__form_button\":\"Contact_contacts__form_button__EoroJ\",\"bg_ForAutocompliteText\":\"Contact_bg_ForAutocompliteText__OnyFL\",\"fontSizeCyrillic\":\"Contact_fontSizeCyrillic__d7G-7\",\"errorBorder\":\"Contact_errorBorder__ejhDL\",\"errorButton\":\"Contact_errorButton__4gdeN\",\"animateErrorButton\":\"Contact_animateErrorButton__DHFIK\",\"animationIsLoading\":\"Contact_animationIsLoading__qI66j\",\"animateButton\":\"Contact_animateButton__ZKkVy\",\"animationIsLoaded\":\"Contact_animationIsLoaded__0BRRz\",\"modalContainer\":\"Contact_modalContainer__baLEb\",\"animateModalBG\":\"Contact_animateModalBG__tu-+I\",\"modalText\":\"Contact_modalText__YBfl-\",\"animateModalText\":\"Contact_animateModalText__CGO6h\"};","import React, { ChangeEvent, MouseEvent, memo, useEffect, useState } from 'react'\r\nimport usePortal from 'react-useportal'\r\nimport s from './Contact.module.scss'\r\n// import { TextareaMessage } from './textareaMessage/TextareaMessage'\r\n\r\nexport type ContactType = {}\r\n\r\nexport const Contact: React.FC<ContactType> = memo(({}) => {\r\n  // Скачанный модуль usePortal\r\n  const { openPortal, closePortal, isOpen, Portal } = usePortal({ bindTo: document.getElementById('wrapper')! })\r\n\r\n  console.log('rendered contact вынести конкпу в отдельну компоненту')\r\n  const [autocomplite, setAutocomplite] = useState(localStorage.getItem('isOffAutocomplite') || 'off')\r\n  const [isChecked, setIsChecked] = useState<boolean>(localStorage.getItem('isOffAutocomplite') === 'on' ? true : false)\r\n  const onChangeAutocomplite = () => {\r\n    if (autocomplite === 'off') {\r\n      setAutocomplite('on')\r\n      setIsChecked(true)\r\n      localStorage.setItem('isOffAutocomplite', 'on')\r\n    } else {\r\n      setAutocomplite('off')\r\n      setIsChecked(false)\r\n      localStorage.setItem('isOffAutocomplite', 'off')\r\n    }\r\n  }\r\n\r\n  const [isAnimationLoaded, setIsAnimationLoaded] = useState(s.animationIsLoading)\r\n\r\n  const [buttonErrorStyle, setButtonErrorStyle] = useState<string>('')\r\n  const [nameFieldErrorStyle, setNameFieldErrorStyle] = useState<string>('')\r\n  const [emailFieldErrorStyle, setEmailFieldErrorStyle] = useState<string>('')\r\n\r\n  const [fontSizeCyrillicName, setFontSizeCyrillicName] = useState<string>('')\r\n  const [textField, setTextField] = useState<string>(sessionStorage.getItem('textField') || '')\r\n  const [fontSizeCyrillicTextField, setFontSizeCyrillicTextField] = useState<string>('')\r\n  const [textFieldErrorStyle, setTextFieldErrorStyle] = useState<string>('')\r\n\r\n  const cyrillicChar = /[а-яёА-ЯЁ]/\r\n  const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[ a-zA-Z0-9-]+(?:\\.[ a-zA-Z0-9-]+) *$/\r\n\r\n  const [nameField, setNameField] = useState<string>(sessionStorage.getItem('nameField') || '')\r\n  const [emailField, setEmailField] = useState<string>(sessionStorage.getItem('emailField') || '')\r\n\r\n  const onChangeNameField = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const validate = e.currentTarget.value.replace(/[^a-zA-Zа-яёА-ЯЁ -]/, '').slice(0, 50)\r\n    validate.match(cyrillicChar) ? setFontSizeCyrillicName(s.fontSizeCyrillic) : setFontSizeCyrillicName('')\r\n    setNameField(validate)\r\n    sessionStorage.setItem('nameField', validate)\r\n  }\r\n  const onChangeEmailField = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const validate = e.currentTarget.value.replace(/[а-яёА-ЯЁ]/, '').slice(0, 200)\r\n    setEmailField(validate)\r\n    sessionStorage.setItem('emailField', validate)\r\n  }\r\n  const onClickButtonHandler = (e: MouseEvent<HTMLButtonElement>) => {\r\n    if (!nameField || !emailField || !textField || !emailField.match(validRegex)) {\r\n      setButtonErrorStyle(s.errorButton)\r\n    } else {\r\n      // Если поля заполнены без ошибок - выпадает модальное окно на 2 секунды и зачищаются поля\r\n      openPortal(e)\r\n      document.querySelector('body')?.style.setProperty('overflow', 'hidden')\r\n      // document.querySelector('#content')?.setAttribute('style', 'opacity: .5;')\r\n      setTimeout(() => {\r\n        closePortal()\r\n        document.querySelector('body')?.removeAttribute('style')\r\n        // document.querySelector('#content')?.removeAttribute('style')\r\n        setNameField('')\r\n        sessionStorage.setItem('nameField', '')\r\n        setEmailField('')\r\n        sessionStorage.setItem('emailField', '')\r\n        setTextField('')\r\n        sessionStorage.setItem('textField', '')\r\n      }, 2000)\r\n    }\r\n    if (!nameField) setNameFieldErrorStyle(s.errorBorder)\r\n    if (!emailField || !emailField.match(validRegex)) setEmailFieldErrorStyle(s.errorBorder)\r\n    if (!textField) setTextFieldErrorStyle(s.errorBorder)\r\n  }\r\n\r\n  const onChangeTextField = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const validate = e.currentTarget.value.slice(0, 3000)\r\n    validate.match(cyrillicChar) ? setFontSizeCyrillicTextField(s.fontSizeCyrillic) : setFontSizeCyrillicTextField('')\r\n    setTextField(validate)\r\n    sessionStorage.setItem('textField', validate)\r\n  }\r\n  const onAnimationEnd = () => {\r\n    setIsAnimationLoaded(s.animationIsLoaded)\r\n    setButtonErrorStyle('')\r\n  }\r\n  const onBlurEmailInput = () => {\r\n    if (!emailField.match(validRegex) && emailField) setEmailFieldErrorStyle(s.errorBorder)\r\n  }\r\n  useEffect(() => {\r\n    nameField.match(cyrillicChar) ? setFontSizeCyrillicName(s.fontSizeCyrillic) : setFontSizeCyrillicName('')\r\n    textField.match(cyrillicChar) ? setFontSizeCyrillicTextField(s.fontSizeCyrillic) : setFontSizeCyrillicTextField('')\r\n    if (nameField) setNameFieldErrorStyle('')\r\n    if (emailField) setEmailFieldErrorStyle('')\r\n    if (textField) setTextFieldErrorStyle('')\r\n  }, [nameField, emailField, textField])\r\n\r\n  return (\r\n    <>\r\n      <section className={s.contacts}>\r\n        <div className={s.contacts__container}>\r\n          <div className={s.contacts__content}>\r\n            <div className={s.contacts__text_container}>\r\n              <h2 className={s.contacts__title}>Contact</h2>\r\n              <p className={s.contacts__text}>Contact me if you have a job or just say hi :)</p>\r\n            </div>\r\n            <div className={s.contacts__form_container}>\r\n              <label className={s.switcher_container} htmlFor='checkbox'>\r\n                autocomplete\r\n                <input type='checkbox' id='checkbox' onChange={onChangeAutocomplite} checked={isChecked} />\r\n                <span className={s.switcher}></span>\r\n              </label>\r\n              <form className={s.contacts__form} action=''>\r\n                <div className={s.contacts__block_input}>\r\n                  <label className={s.bg_ForAutocompliteText}></label>\r\n                  <input\r\n                    className={`${s.contacts__input_name} ${fontSizeCyrillicName} ${nameFieldErrorStyle}`}\r\n                    id='name'\r\n                    required\r\n                    name='name'\r\n                    type='text'\r\n                    autoComplete={autocomplite}\r\n                    value={nameField}\r\n                    onChange={onChangeNameField}\r\n                  />\r\n                  <label className={s.contacts__label_name}>NAME</label>\r\n                  <label className={s.placeholder} htmlFor='name'>\r\n                    NAME\r\n                  </label>\r\n                </div>\r\n                <div className={s.contacts__block_input}>\r\n                  <label className={s.bg_ForAutocompliteText}></label>\r\n                  <input\r\n                    className={`${s.contacts__input_email} ${emailFieldErrorStyle}`}\r\n                    required\r\n                    name='email'\r\n                    id='email'\r\n                    type='text'\r\n                    autoComplete={autocomplite}\r\n                    value={emailField}\r\n                    onChange={onChangeEmailField}\r\n                    onBlur={onBlurEmailInput}\r\n                  />\r\n                  <label className={s.contacts__label_email}>EMAIL</label>\r\n                  <label className={s.placeholder} htmlFor='email'>\r\n                    EMAIL\r\n                  </label>\r\n                </div>\r\n                <div className={s.contacts__block_input}>\r\n                  <textarea\r\n                    required\r\n                    className={`${s.contacts__textarea} ${fontSizeCyrillicTextField} ${textFieldErrorStyle}`}\r\n                    name='message'\r\n                    id='message'\r\n                    value={textField}\r\n                    onChange={onChangeTextField}\r\n                  />\r\n                  <label className={s.contacts__label_message}>MESSAGE</label>\r\n                  <label className={s.placeholder} htmlFor='message'>\r\n                    MESSAGE\r\n                  </label>\r\n                  {/* <TextareaMessage cyrillicChar={cyrillicChar} /> */}\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {isOpen && (\r\n              <Portal>\r\n                <div className={s.modalContainer}>\r\n                  <span className={s.modalText}>Successfully sent</span>\r\n                </div>\r\n              </Portal>\r\n            )}\r\n            <button\r\n              className={`${s.contacts__form_button} ${buttonErrorStyle} ${isAnimationLoaded}`}\r\n              type='submit'\r\n              form='contacts'\r\n              onClick={onClickButtonHandler}\r\n              onAnimationEnd={onAnimationEnd}>\r\n              SEND ME MESSAGE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n})\r\n//600 x 960 540 x 960 820 x 1180 810 x 1080 768 x 1024 1280 x 720\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { useState, useRef, useEffect, useCallback, useMemo, ReactNode, DOMAttributes, SyntheticEvent, MutableRefObject, MouseEvent } from 'react'\nimport { createPortal, findDOMNode } from 'react-dom'\nimport useSSR from 'use-ssr'\n\ntype HTMLElRef = MutableRefObject<HTMLElement>\ntype CustomEvent = {\n  event?: SyntheticEvent<any, Event>\n  portal: HTMLElRef\n  targetEl: HTMLElRef\n} & SyntheticEvent<any, Event>\n\ntype CustomEventHandler = (customEvent: CustomEvent) => void\ntype CustomEventHandlers = {\n  [K in keyof DOMAttributes<K>]?: CustomEventHandler\n}\n\ntype EventListenerMap = { [K in keyof DOMAttributes<K>]: keyof GlobalEventHandlersEventMap }\ntype EventListenersRef = MutableRefObject<{\n  [K in keyof DOMAttributes<K>]?: (event: SyntheticEvent<any, Event>) => void\n}>\n\nexport type UsePortalOptions = {\n  closeOnOutsideClick?: boolean\n  closeOnEsc?: boolean\n  bindTo?: HTMLElement // attach the portal to this node in the DOM\n  isOpen?: boolean\n  onOpen?: CustomEventHandler\n  onClose?: CustomEventHandler\n  onPortalClick?: CustomEventHandler\n} & CustomEventHandlers\n\ntype UsePortalObjectReturn = {} // TODO\ntype UsePortalArrayReturn = [] // TODO\n\nexport const errorMessage1 = 'You must either add a `ref` to the element you are interacting with or pass an `event` to openPortal(e) or togglePortal(e).'\n\nexport default function usePortal({\n  closeOnOutsideClick = true,\n  closeOnEsc = true,\n  bindTo, // attach the portal to this node in the DOM\n  isOpen: defaultIsOpen = false,\n  onOpen,\n  onClose,\n  onPortalClick,\n  ...eventHandlers\n}: UsePortalOptions = {}): any {\n  const { isServer, isBrowser } = useSSR()\n  const [isOpen, makeOpen] = useState(defaultIsOpen)\n  // we use this ref because `isOpen` is stale for handleOutsideMouseClick\n  const open = useRef(isOpen)\n\n  const setOpen = useCallback((v: boolean) => {\n    // workaround to not have stale `isOpen` in the handleOutsideMouseClick\n    open.current = v\n    makeOpen(v)\n  }, [])\n\n  const targetEl = useRef() as HTMLElRef // this is the element you are clicking/hovering/whatever, to trigger opening the portal\n  const portal = useRef(isBrowser ? document.createElement('div') : null) as HTMLElRef\n\n  useEffect(() => {\n    if (isBrowser && !portal.current) portal.current = document.createElement('div')\n  }, [isBrowser, portal])\n\n  const elToMountTo = useMemo(() => {\n    if (isServer) return\n    return (bindTo && findDOMNode(bindTo)) || document.body\n  }, [isServer, bindTo])\n\n  const createCustomEvent = (e: any) => {\n    if (!e) return { portal, targetEl, event: e }\n    const event = e || {}\n    if (event.persist) event.persist()\n    event.portal = portal\n    event.targetEl = targetEl\n    event.event = e\n    const { currentTarget } = e\n    if (!targetEl.current && currentTarget && currentTarget !== document) targetEl.current = event.currentTarget\n    return event\n  }\n\n  // this should handle all eventHandlers like onClick, onMouseOver, etc. passed into the config\n  const customEventHandlers: CustomEventHandlers = Object\n    .entries(eventHandlers)\n    .reduce<any>((acc, [handlerName, eventHandler]) => {\n      acc[handlerName] = (event?: SyntheticEvent<any, Event>) => {\n        if (isServer) return\n        eventHandler(createCustomEvent(event))\n      }\n      return acc\n    }, {})\n\n  const openPortal = useCallback((e: any) => {\n    if (isServer) return\n    const customEvent = createCustomEvent(e)\n    // for some reason, when we don't have the event argument, there\n    // is a weird race condition. Would like to see if we can remove\n    // setTimeout, but for now this works\n    if (targetEl.current == null) {\n      setTimeout(() => setOpen(true), 0)\n      throw Error(errorMessage1)\n    }\n    if (onOpen) onOpen(customEvent)\n    setOpen(true)\n  }, [isServer, portal, setOpen, targetEl, onOpen])\n\n  const closePortal = useCallback((e: any) => {\n    if (isServer) return\n    const customEvent = createCustomEvent(e)\n    if (onClose && open.current) onClose(customEvent)\n    if (open.current) setOpen(false)\n  }, [isServer, onClose, setOpen])\n\n  const togglePortal = useCallback((e: SyntheticEvent<any, Event>): void => \n    open.current ? closePortal(e) : openPortal(e),\n    [closePortal, openPortal]\n  )\n\n  const handleKeydown = useCallback((e: KeyboardEvent): void => \n    (e.key === 'Escape' && closeOnEsc) ? closePortal(e) : undefined,\n    [closeOnEsc, closePortal]\n  )\n\n  const handleOutsideMouseClick = useCallback((e: MouseEvent): void => {\n    const containsTarget = (target: HTMLElRef) => target.current.contains(e.target as HTMLElement)\n    if (containsTarget(portal) || (e as any).button !== 0 || !open.current || containsTarget(targetEl)) return\n    if (closeOnOutsideClick) closePortal(e)\n  }, [isServer, closePortal, closeOnOutsideClick, portal])\n\n  const handleMouseDown = useCallback((e: MouseEvent): void => {\n    if (isServer || !(portal.current instanceof HTMLElement)) return\n    const customEvent = createCustomEvent(e)\n    if (portal.current.contains(customEvent.target as HTMLElement) && onPortalClick) onPortalClick(customEvent)\n    handleOutsideMouseClick(e)\n  }, [handleOutsideMouseClick])\n\n  // used to remove the event listeners on unmount\n  const eventListeners = useRef({}) as EventListenersRef\n\n  useEffect(() => {\n    if (isServer) return\n    if (!(elToMountTo instanceof HTMLElement) || !(portal.current instanceof HTMLElement)) return\n\n    // TODO: eventually will need to figure out a better solution for this.\n    // Surely we can find a way to map onScroll/onWheel -> scroll/wheel better,\n    // but for all other event handlers. For now this works.\n    const eventHandlerMap: EventListenerMap = {\n      onScroll: 'scroll',\n      onWheel: 'wheel',\n    }\n    const node = portal.current\n    elToMountTo.appendChild(portal.current)\n    // handles all special case handlers. Currently only onScroll and onWheel\n    Object.entries(eventHandlerMap).forEach(([handlerName /* onScroll */, eventListenerName /* scroll */]) => {\n      if (!eventHandlers[handlerName as keyof EventListenerMap]) return\n      eventListeners.current[handlerName as keyof EventListenerMap] = (e: any) => (eventHandlers[handlerName as keyof EventListenerMap] as any)(createCustomEvent(e))\n      document.addEventListener(eventListenerName as keyof GlobalEventHandlersEventMap, eventListeners.current[handlerName as keyof EventListenerMap] as any)\n    })\n    document.addEventListener('keydown', handleKeydown)\n    document.addEventListener('mousedown', handleMouseDown as any)\n\n    return () => {\n      // handles all special case handlers. Currently only onScroll and onWheel\n      Object.entries(eventHandlerMap).forEach(([handlerName, eventListenerName]) => {\n        if (!eventHandlers[handlerName as keyof EventListenerMap]) return\n        document.removeEventListener(eventListenerName as keyof GlobalEventHandlersEventMap, eventListeners.current[handlerName as keyof EventListenerMap] as any)\n        delete eventListeners.current[handlerName as keyof EventListenerMap]\n      })\n      document.removeEventListener('keydown', handleKeydown)\n      document.removeEventListener('mousedown', handleMouseDown as any)\n      elToMountTo.removeChild(node)\n    }\n  }, [isServer, handleOutsideMouseClick, handleKeydown, elToMountTo, portal])\n\n  const Portal = useCallback(({ children }: { children: ReactNode }) => {\n    if (portal.current != null) return createPortal(children, portal.current)\n    return null\n  }, [portal])\n\n  return Object.assign(\n    [openPortal, closePortal, open.current, Portal, togglePortal, targetEl, portal],\n    {\n      isOpen: open.current,\n      openPortal,\n      ref: targetEl,\n      closePortal,\n      togglePortal,\n      Portal,\n      portalRef: portal,\n      ...customEventHandlers,\n      bind: { // used if you want to spread all html attributes onto the target element\n        ref: targetEl,\n        ...customEventHandlers\n      }\n    }\n  )\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Device;\n(function (Device) {\n    Device[\"Browser\"] = \"browser\";\n    Device[\"Server\"] = \"server\";\n    Device[\"Native\"] = \"native\";\n})(Device = exports.Device || (exports.Device = {}));\nvar Browser = Device.Browser, Server = Device.Server, Native = Device.Native;\nvar canUseDOM = !!(typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement);\nvar canUseNative = typeof navigator != 'undefined' && navigator.product == 'ReactNative';\nvar device = canUseNative ? Native : canUseDOM ? Browser : Server;\nvar SSRObject = {\n    isBrowser: device === Browser,\n    isServer: device === Server,\n    isNative: device === Native,\n    device: device,\n    canUseWorkers: typeof Worker !== 'undefined',\n    canUseEventListeners: device === Browser && !!window.addEventListener,\n    canUseViewport: device === Browser && !!window.screen,\n};\n// TODO: instead of this, do a polyfill for `Object.assign` https://www.npmjs.com/package/es6-object-assign\nvar assign = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.reduce(function (acc, obj) { return (__assign(__assign({}, acc), obj)); }, {});\n};\nvar values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\nvar toArrayObject = function () { return assign((values(SSRObject), SSRObject)); };\nvar useSSRObject = toArrayObject();\nexports.weAreServer = function () {\n    SSRObject.isServer = true;\n    useSSRObject = toArrayObject();\n};\nexports.useSSR = function () { return useSSRObject; };\nexports.default = exports.useSSR;\n"],"names":["Contact","memo","obj","TypeError","usePortal","bindTo","document","getElementById","openPortal","closePortal","isOpen","Portal","console","log","useState","localStorage","getItem","autocomplite","setAutocomplite","isChecked","setIsChecked","s","isAnimationLoaded","setIsAnimationLoaded","buttonErrorStyle","setButtonErrorStyle","nameFieldErrorStyle","setNameFieldErrorStyle","emailFieldErrorStyle","setEmailFieldErrorStyle","fontSizeCyrillicName","setFontSizeCyrillicName","sessionStorage","textField","setTextField","fontSizeCyrillicTextField","setFontSizeCyrillicTextField","textFieldErrorStyle","setTextFieldErrorStyle","cyrillicChar","validRegex","nameField","setNameField","emailField","setEmailField","useEffect","match","className","htmlFor","type","id","onChange","setItem","checked","action","required","name","autoComplete","value","e","validate","currentTarget","replace","slice","onBlur","form","onClick","querySelector","style","setProperty","setTimeout","removeAttribute","onAnimationEnd","exports","_a","closeOnOutsideClick","_c","closeOnEsc","_d","defaultIsOpen","onOpen","onClose","onPortalClick","eventHandlers","isServer","isBrowser","makeOpen","open","react_1","setOpen","v","current","targetEl","portal","createElement","elToMountTo","react_dom_1","body","createCustomEvent","event","persist","customEventHandlers","Object","entries","reduce","acc","handlerName","eventHandler","customEvent","Error","togglePortal","handleKeydown","key","undefined","handleOutsideMouseClick","containsTarget","target","contains","button","handleMouseDown","HTMLElement","eventListeners","eventHandlerMap","onScroll","onWheel","node","appendChild","forEach","eventListenerName","addEventListener","removeEventListener","removeChild","children","assign","__assign","ref","portalRef","bind","Device","this","t","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","Browser","Server","Native","canUseDOM","window","device","navigator","product","SSRObject","isNative","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","toArrayObject","args","_i","keys","map","useSSRObject","weAreServer","useSSR"],"sourceRoot":""}