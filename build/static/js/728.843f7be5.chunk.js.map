{"version":3,"file":"static/js/728.843f7be5.chunk.js","mappings":"kLACA,EAAyB,uBAAzB,EAAoE,kCAApE,EAAwH,gCAAxH,EAAwK,8BAAxK,EAAwQ,oCAAxQ,EAA2T,6BAA3T,EAA0gC,gCAA1gC,EAA6lC,uB,yjgiCCIvlCA,EAAc,CAClB,QACA,QACA,aACA,aACA,WACA,QACA,aACA,WACA,YACA,MACA,gBACA,cACA,OACA,MACA,QAIIC,EAAgB,CACpBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CAChBC,oBAAqB,iBAErBC,iBAAiB,EACjBC,aAAa,IAIJC,EAASC,EAAAA,MAAW,WAC/BC,QAAQC,IAAI,iBACZ,IAAMC,EAASb,EAAYc,KAAI,SAACC,EAAIC,GAClC,OACE,cAAWC,UAAWC,EAAtB,SACGH,GADKC,MAKZ,GAA4CG,EAAAA,EAAAA,UAA2C,WAAvF,eAAOC,EAAP,KAAuBC,EAAvB,KAOA,GAAgDF,EAAAA,EAAAA,WAAkB,GAAlE,eAAOG,EAAP,KAAyBC,EAAzB,KAQA,OAPAb,EAAAA,WAAgB,WACd,IAAMc,EAAeC,YAAW,WAC9BF,GAAoB,KACnB,KACH,OAAO,kBAAMG,aAAaF,MACzB,KAGD,+BACE,oBAASP,UAAWC,EAApB,UACE,gBAAKD,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAiBS,eAnBd,kBAAMN,EAAkB,YAmB1C,qBAGA,gBAAKJ,UAAWC,EAAhB,SACGL,KAWH,gBAAKI,UAAWC,KAChB,gBAAKD,UAAWC,EAAUU,QAlCL,WACCP,EAAX,WAAnBD,EAAgD,UAA+B,WAiCvE,SACGE,IAAoB,SAAC,IAAD,CAAQO,OAAQ5B,EAAe6B,aAAcV,EAAgBW,MAAO","sources":["webpack://portfolio123/./src/components/main/skills/Skills.module.scss?bf9a","components/main/skills/Skills.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"skills\":\"Skills_skills__wHv6m\",\"skills__container\":\"Skills_skills__container__WvtVw\",\"skills__content\":\"Skills_skills__content__x4U+c\",\"skills__title\":\"Skills_skills__title__nuAOa\",\"animateTitle\":\"Skills_animateTitle__f-SJ5\",\"skills__block_items\":\"Skills_skills__block_items__EsWpX\",\"skills__item\":\"Skills_skills__item__bs4jg\",\"animateCoin1\":\"Skills_animateCoin1__qgbgF\",\"animateCoin2\":\"Skills_animateCoin2__K4A30\",\"animateCoin3\":\"Skills_animateCoin3__wOG-2\",\"animateCoin4\":\"Skills_animateCoin4__UJHYo\",\"animateCoin5\":\"Skills_animateCoin5__w8blU\",\"animateCoin6\":\"Skills_animateCoin6__upnR3\",\"animateCoin7\":\"Skills_animateCoin7__mheLq\",\"animateCoin8\":\"Skills_animateCoin8__ARnUP\",\"animateCoin9\":\"Skills_animateCoin9__qKBrs\",\"animateCoin10\":\"Skills_animateCoin10__RWZmh\",\"animateCoin11\":\"Skills_animateCoin11__Cdpx-\",\"animateCoin12\":\"Skills_animateCoin12__QuIbK\",\"animateCoin13\":\"Skills_animateCoin13__lvfco\",\"animateCoin14\":\"Skills_animateCoin14__ia334\",\"animateCoin15\":\"Skills_animateCoin15__c1u8t\",\"avatarBackPlate\":\"Skills_avatarBackPlate__W4nEG\",\"avatarSpeed\":\"Skills_avatarSpeed__3-pyu\",\"avatar\":\"Skills_avatar__ORNWs\",\"animateTitleAvatar\":\"Skills_animateTitleAvatar__7EBmL\"};","import React, { useState } from 'react'\r\nimport s from './Skills.module.scss'\r\nimport { Lottie } from '@crello/react-lottie'\r\nimport animationData from '../../../lottie/skills.json'\r\n\r\nconst skillsArray = [\r\n  'React',\r\n  'Redux',\r\n  'JavaScript',\r\n  'TypeScript',\r\n  'Rest API',\r\n  'Axios',\r\n  'Unit Tests',\r\n  'SnapShot',\r\n  'StoryBook',\r\n  'Git',\r\n  'After Effects',\r\n  'Illustrator',\r\n  'SASS',\r\n  'CSS',\r\n  'HTML',\r\n]\r\n\r\n//Лотти отвечает за анализ данных анимации, поступающих через JSON, вычисление состояния каждой анимации в определенный момент времени и точное ее отображение на экране.\r\nconst lottieOptions = {\r\n  loop: false,\r\n  autoplay: false, //Если установлено значение true, анимация будет воспроизводиться сразу после загрузки.\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: 'xMidYMid slice',\r\n    //  className: `${s.avatarSpeed}`,\r\n    progressiveLoad: true, //будет загружать анимацию постепенно, пока требуются слои\r\n    viewBoxOnly: true, //если true, не будет добавлять свойства ширины, высоты и преобразования к корневому элементу\r\n  },\r\n}\r\n\r\nexport const Skills = React.memo(() => {\r\n  console.log('render skills')\r\n  const skills = skillsArray.map((el, i) => {\r\n    return (\r\n      <p key={i} className={s.skills__item}>\r\n        {el}\r\n      </p>\r\n    )\r\n  })\r\n  const [isAvatarPaused, setIsAvatarPaused] = useState<'playing' | 'stopped' | 'paused'>('stopped')\r\n  const onTitleAnimationEnd = () => setIsAvatarPaused('playing')\r\n  const onClickAnimationPaused = () => {\r\n    isAvatarPaused === 'paused' ? setIsAvatarPaused('playing') : setIsAvatarPaused('paused')\r\n  }\r\n\r\n  //Поскольку чтение (анализ) данных тяжелой анимации блокирует основной поток, что заметно глазу при рендере анимационной волны, поставил задержку где не будет заметно.\r\n  const [canIRenderLottie, setCanIRenderLottie] = useState<boolean>(false)\r\n  React.useEffect(() => {\r\n    const lottieRender = setTimeout(() => {\r\n      setCanIRenderLottie(true)\r\n    }, 650)\r\n    return () => clearTimeout(lottieRender)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <section className={s.skills}>\r\n        <div className={s.skills__container}>\r\n          <div className={s.skills__content}>\r\n            <h2 className={s.skills__title} onAnimationEnd={onTitleAnimationEnd}>\r\n              Skills\r\n            </h2>\r\n            <div className={s.skills__block_items}>\r\n              {skills}\r\n              {/* <p className={`${s.skills__item} ${s.skills__absolute}`}>\r\n                Handsome\r\n              </p>\r\n              <p className={`${s.skills__item} ${s.skills__absolute}`}>\r\n                Awesome\r\n              </p>\r\n              <p className={`${s.skills__item} ${s.skills__absolute}`}>\r\n                Curious\r\n              </p> */}\r\n            </div>\r\n            <div className={s.avatarBackPlate}></div>\r\n            <div className={s.avatar} onClick={onClickAnimationPaused}>\r\n              {canIRenderLottie && <Lottie config={lottieOptions} playingState={isAvatarPaused} speed={1} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n})\r\n"],"names":["skillsArray","lottieOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","progressiveLoad","viewBoxOnly","Skills","React","console","log","skills","map","el","i","className","s","useState","isAvatarPaused","setIsAvatarPaused","canIRenderLottie","setCanIRenderLottie","lottieRender","setTimeout","clearTimeout","onAnimationEnd","onClick","config","playingState","speed"],"sourceRoot":""}