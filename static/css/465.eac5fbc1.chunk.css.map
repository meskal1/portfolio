{"version":3,"file":"static/css/465.eac5fbc1.chunk.css","mappings":"AACA,sBACE,aACA,YAEA,iCACE,aAEA,YADA,uBAGA,cADA,iBAEA,eAEF,+BAGE,mBAFA,aACA,sBAGA,YACA,SAFA,sBAEA,CAEF,6BAGE,oIACA,mBACA,gBAHA,UADA,yBAIA,CAEF,mCAGE,aACA,eACA,uBAHA,gBADA,iBAIA,CCsDA,yBD3DF,mCC4DI,kBAGJ,iDD/DA,mCCgEE,+DAZc,EAed,2BDnEF,mCCoEI,iBATF,yBD3DF,mCC4DI,+CAGJ,iDD/DA,mCCgEE,6IAZc,EAed,2BDnEF,mCCoEI,+CATF,yBD3DF,mCC4DI,iBAGJ,+CD/DA,mCCgEE,uDAZc,EAed,yBDnEF,mCCoEI,iBD1DJ,6BAGE,sBACA,mBAHA,cACA,iBAEA,CC6CA,yBDjDF,6BCkDI,qBAGJ,iDDrDA,6BCsDE,kEAZc,EAed,2BDzDF,6BC0DI,sBATF,yBDjDF,6BCkDI,iBAGJ,iDDrDA,6BCsDE,iEAZc,EAed,2BDzDF,6BC0DI,gBATF,yBDjDF,6BCkDI,qBAGJ,iDDrDA,6BCsDE,mEAZc,EAed,2BDzDF,6BC0DI,sBATF,yBDjDF,6BCkDI,sBAGJ,iDDrDA,6BCsDE,oEAZc,EAed,2BDzDF,6BC0DI,wBATF,yBDjDF,6BCkDI,sBAGJ,iDDrDA,6BCsDE,oEAZc,EAed,2BDzDF,6BC0DI,uBATF,yBDjDF,6BCkDI,uBAGJ,iDDrDA,6BCsDE,qEAZc,EAed,2BDzDF,6BC0DI,wBATF,yBDjDF,6BCkDI,mBAGJ,iDDrDA,6BCsDE,kEAZc,EAed,2BDzDF,6BC0DI,qBD9CF,wBAZF,6BAcI,aADA,UACA,EAIN,yBAGE,mBAFA,YACA,iBACA,CACA,+DAQE,mBANA,WAKA,YAHA,kBAEA,QADA,MAFA,uDAKA,CAEF,+BACE,mBAEF,gCAEE,mBADA,UACA,CAIF,+BACE,0JAEF,gCACE,8JAGJ,8CACE,GACE,8DAEF,GAEE,SAAQ,CADR,qDACA,EANJ,sCACE,GACE,8DAEF,GAEE,SAAQ,CADR,qDACA,EAGJ,2CACE,GACE,UACA,wFAEF,GACE,UACA,2FAPJ,mCACE,GACE,UACA,wFAEF,GACE,UACA,2FAGJ,kDACE,IACE,UAEF,GACE,WALJ,0CACE,IACE,UAEF,GACE,WAGJ,iDACE,GAEE,MAAK,CADL,OACA,CAEF,IACE,WAEF,GACE,SATJ,yCACE,GAEE,MAAK,CADL,OACA,CAEF,IACE,WAEF,GACE","sources":["components/main/skills/Skills.module.scss","mixin.scss"],"sourcesContent":["@import '../../../mixin.scss';\r\n.skills {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  // background: #DDFEE9;\r\n  &__container {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-grow: 1;\r\n    max-width: 1050px;\r\n    margin: 0 auto;\r\n    padding: 0 15px;\r\n  }\r\n  &__content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-grow: 1;\r\n    gap: 20px;\r\n  }\r\n  &__title {\r\n    text-transform: capitalize;\r\n    opacity: 0;\r\n    animation: animateTitle 0.7s ease 1 1.1s forwards;\r\n    font-size: rem(50);\r\n    font-weight: 700;\r\n  }\r\n  &__block_items {\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    @include adaptiveValue('row-gap', 15, 10, 536, 378, 1);\r\n    @include adaptiveValue('column-gap', 20, 10, 536, 378, 1);\r\n    @include adaptiveValue('width', 450, 250, 536, 280, 1);\r\n  }\r\n  &__item {\r\n    color: #f9c655;\r\n    text-align: center;\r\n    border: 1px solid white;\r\n    border-radius: 30px;\r\n    @include adaptiveValue('line-height', 20, 15, 536, 378, 1);\r\n    @include adaptiveValue('width', 127, 102, 536, 378, 1);\r\n    @include adaptiveValue('padding-top', 10, 5, 536, 378, 1);\r\n    @include adaptiveValue('padding-bottom', 8, 2, 536, 378, 1);\r\n    @include adaptiveValue('padding-left', 10, 5, 536, 378, 1);\r\n    @include adaptiveValue('padding-right', 10, 5, 536, 378, 1);\r\n    @include adaptiveValue('font-size', 20, 17, 536, 378, 1);\r\n    @media (max-width: 377px) {\r\n      width: unset;\r\n      display: flex;\r\n    }\r\n  }\r\n}\r\n.hideItems {\r\n  padding: 2px;\r\n  position: relative;\r\n  border-radius: 30px;\r\n  &::after,\r\n  &::before {\r\n    content: '';\r\n    transform: translate3d(0, 0, 0);\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    height: 105%;\r\n    border-radius: 30px;\r\n  }\r\n  &::after {\r\n    background: #23242e;\r\n  }\r\n  &::before {\r\n    width: 100%;\r\n    background: #1c1d25;\r\n  }\r\n}\r\n.showItems {\r\n  &::after {\r\n    animation: transformBgItem 0.6s linear var(--delay) forwards;\r\n  }\r\n  &::before {\r\n    animation: opacityInvisible 0.35s linear var(--delay) forwards;\r\n  }\r\n}\r\n@keyframes animateTitle {\r\n  0% {\r\n    transform: translate(0, 20px);\r\n  }\r\n  100% {\r\n    transform: translate(0px, 0px);\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes scaleItem {\r\n  0% {\r\n    opacity: 1;\r\n    transform: scale(1) translate(-50%, -50%);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: scale(11) translate(-50%, -50%);\r\n  }\r\n}\r\n@keyframes opacityInvisible {\r\n  99% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes transformBgItem {\r\n  0% {\r\n    width: 0%;\r\n    left: 0;\r\n  }\r\n  50% {\r\n    width: 100%;\r\n  }\r\n  100% {\r\n    width: 0%;\r\n  }\r\n}\r\n","@use 'sass:math';\r\n\r\n// Минимальная ширина страницы\r\n$minWidth: 320;\r\n// Минимальная высота страницы\r\n$minHeight: 350; //301\r\n// Ширина полотна (макета)\r\n$maxWidth: 1920;\r\n// Высота въюпорта максимальная (макета)\r\n// $maxHeight: 1080;\r\n// Ширина ограничивающего контейнера (0 = нет ограничения)\r\n$maxWidthContainer: 1050;\r\n// Общий отступ у контейнера\r\n// (30 = по 15px слева и справа, 0 = нет отступа)\r\n$containerPadding: 30;\r\n// Ширина страбатывания первого брейкпоинта\r\n$containerWidth: $maxWidthContainer + $containerPadding;\r\n\r\n//Адаптивное свойство\r\n//Percent\r\n@function percent($px, $from) {\r\n  $result: math.div($px, $from) * 100%;\r\n  @return $result;\r\n}\r\n//REM\r\n@function rem($px) {\r\n  $result: math.div($px, 16) + rem;\r\n  @return $result;\r\n}\r\n//EM\r\n@function em($px, $current: 16) {\r\n  $result: math.div($px, $current) + em;\r\n  @return $result;\r\n}\r\n\r\n@mixin adaptiveValueMaxHeight($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $maxHeight, $keepSize: 0) {\r\n  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {\r\n  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize>$startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}