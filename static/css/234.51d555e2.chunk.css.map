{"version":3,"file":"static/css/234.51d555e2.chunk.css","mappings":"AAEA,sBACE,kBACA,UAEA,iCAEE,cADA,iBAEA,eAGF,+BACE,eACA,kBAGF,oCAWE,sIARA,aACA,SACA,uBAEA,gBAEA,SAEA,CCsEA,0BDjFF,oCCkFI,uBAGJ,8CDrFA,oCCsFE,qEAXc,EAcd,uBDzFF,oCC0FI,uBD9EF,wBAZF,oCAaI,qIAIJ,kCAEE,YADA,UACA,CAGF,kCAME,kBAFA,YAHA,kBAOA,0BALA,UAKA,CAEA,yCAWE,gBACA,kBAPA,WAJA,WAQA,YAHA,SAHA,kBAKA,WAJA,UAQA,CAGF,wCACE,WAOA,YAHA,OAFA,kBACA,MAGA,UACA,CAIA,oDACE,4EAKF,sDACE,6EAKF,sDAMA,8EACE,sDAKF,8EAEE,8FAIF,kCACE,2BAKN,wBACE,gDAKA,kBACA,mCAIA,sEAEA,+DAEE,CAJF,8FAIE,CAGF,gEACE,oBACA,kBAEA,6DAIA,oBACA,CA3BJ,iBAyBI,WACA,CADA,QAEA,mJAKF,8DAIA,CATE,qBASF,+BAGF,kBArJF,+CA4JI,aAJA,iBAIA,yBAGJ,sBAEI,6BAFJ,cAEI,mEAIA,qCACA,CAPJ,8BAEI,UAFJ,8BAEI,wBAGF,wCACE,qCACA,gGExKJ,oDAKE,aACA,sBALA,kBAEA,WADA,SAIA,CAEA,4FACE,qBACA,wBAEA,+HACE,WAIJ,iGACE,wBAEA,oIACE,WASJ,uLACE,qBACA","sources":["common/components/Footer/Footer.module.scss","common/styles/mixins/mixin.scss","common/components/Footer/FooterAnimation/FooterAnimation.module.scss"],"sourcesContent":["@import '../../../common/styles/mixins/mixin';\r\n\r\n.footer {\r\n  position: relative;\r\n  z-index: 4;\r\n\r\n  &__container {\r\n    max-width: 1050px;\r\n    margin: 0 auto;\r\n    padding: 0 15px;\r\n  }\r\n\r\n  &__content {\r\n    padding: 15px 0;\r\n    text-align: center;\r\n  }\r\n\r\n  &__block_social {\r\n    @include adaptiveValue('margin-bottom', 20, 10, 500, 320, 1);\r\n\r\n    display: flex;\r\n    gap: 20px;\r\n    justify-content: center;\r\n\r\n    margin: 0px 0px 20px 0px;\r\n\r\n    opacity: 0;\r\n\r\n    animation: animateFooter 0.7s ease 1 1.7s forwards;\r\n    @media (max-width: 377px) {\r\n      animation: animateFooter 0.7s ease 1 0.8s forwards;\r\n    }\r\n  }\r\n\r\n  &__social_img {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n\r\n  &__pic_social {\r\n    position: relative;\r\n\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    border-radius: 50%;\r\n\r\n    transition: all 0.1s linear;\r\n\r\n    &::before {\r\n      content: '';\r\n\r\n      position: absolute;\r\n      z-index: -1;\r\n      bottom: 1px;\r\n      left: 1px;\r\n\r\n      width: 28px;\r\n      height: 28px;\r\n\r\n      background: white;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    &::after {\r\n      content: '';\r\n\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n\r\n    &:nth-child(1) {\r\n      &::after {\r\n        background: url('../../../assets/img/Icons/github_logo.svg');\r\n      }\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      &::after {\r\n        background: url('../../../assets/img/Icons/codears_logo.svg');\r\n      }\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      &::after {\r\n        background: url('../../../assets/img/Icons/telegram_logo.svg');\r\n      }\r\n    }\r\n\r\n    &:nth-child(4) {\r\n      &::after {\r\n        background: url('../../../assets/img/Icons/linkedin_logo.svg');\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      &::before,\r\n      &::after {\r\n        transform: translate(0, -2px);\r\n        transition: all 0.1s ease;\r\n      }\r\n\r\n      &::before {\r\n        background: #f9c847;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__copyrights {\r\n    position: relative;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    line-height: 22px;\r\n    color: rgb(112 108 108);\r\n\r\n    opacity: 0;\r\n\r\n    animation: animateFooter 0.7s ease 1 1.8s forwards;\r\n\r\n    .year_container {\r\n      display: inline-block;\r\n      margin: 0px 0px 0px 35px;\r\n    }\r\n\r\n    .copyright {\r\n      position: relative;\r\n      top: -2px;\r\n      right: -2px;\r\n      display: inline-block;\r\n    }\r\n    @media (max-width: 377px) {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      animation: animateFooter 0.7s ease 1 0.9s forwards;\r\n    }\r\n  }\r\n\r\n  &__text {\r\n    white-space: nowrap;\r\n  }\r\n\r\n  &__copyrights_second_line {\r\n    position: relative;\r\n    display: flex;\r\n  }\r\n  @media (max-width: 377px) {\r\n    position: fixed;\r\n    z-index: 5;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    display: none;\r\n  }\r\n}\r\n@keyframes animateFooter {\r\n  0% {\r\n    transform: translate(0, 20px);\r\n  }\r\n\r\n  100% {\r\n    transform: translate(0, 0px);\r\n    opacity: 1;\r\n  }\r\n}\r\n","@use 'sass:math';\r\n\r\n// Минимальная ширина страницы\r\n$minWidth: 320;\r\n// Минимальная высота страницы\r\n$minHeight: 350; //301\r\n// Ширина полотна (макета)\r\n$maxWidth: 1920;\r\n// Высота въюпорта максимальная (макета)\r\n// $maxHeight: 1080;\r\n// Ширина ограничивающего контейнера (0 = нет ограничения)\r\n$maxWidthContainer: 1050;\r\n// Общий отступ у контейнера\r\n// (30 = по 15px слева и справа, 0 = нет отступа)\r\n$containerPadding: 30;\r\n// Ширина страбатывания первого брейкпоинта\r\n$containerWidth: $maxWidthContainer + $containerPadding;\r\n\r\n//Адаптивное свойство\r\n//Percent\r\n@function percent($px, $from) {\r\n  $result: math.div($px, $from) * 100%;\r\n  @return $result;\r\n}\r\n//REM\r\n@function rem($px) {\r\n  $result: math.div($px, 16) + rem;\r\n  @return $result;\r\n}\r\n//EM\r\n@function em($px, $current: 16) {\r\n  $result: math.div($px, $current) + em;\r\n  @return $result;\r\n}\r\n@mixin adaptiveValueMaxHeight(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $maxHeight,\r\n  $keepSize: 0\r\n) {\r\n  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValue(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize>$startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n",".rotate_copyrights_container {\r\n  position: absolute;\r\n  top: -22px;\r\n  right: 54px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .heart_container {\r\n    display: inline-block;\r\n    transition: all 0.5s ease;\r\n\r\n    .heart_logo {\r\n      width: 20px;\r\n    }\r\n  }\r\n\r\n  .react_logo_container {\r\n    transition: all 0.5s ease;\r\n\r\n    .react_logo {\r\n      width: 20px;\r\n    }\r\n  }\r\n\r\n  .and1_container {\r\n    display: inline-block;\r\n    transition: all 0.5s ease;\r\n  }\r\n\r\n  .and2_container {\r\n    display: inline-block;\r\n    transition: all 0.5s ease;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}