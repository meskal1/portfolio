{"version":3,"file":"static/css/649.2b82b50b.chunk.css","mappings":"AAEA,sBAOE,sBAWA,gEACA,mBALA,WAbA,eAKA,aAKA,gDACA,eACA,gBAJA,qBAMA,kBACA,yBAKA,2BAjBA,yCAiBA,CAEA,6BAEE,kDADA,qEACA,CAEF,wBA3BF,sBA4BI,iBAIJ,kCAIE,wIADA,+CADA,UADA,uDAGA,CACA,gDACE,GACE,8DAGF,GAEE,SAAQ,CADR,qDACA,EAPJ,wCACE,GACE,8DAGF,GAEE,SAAQ,CADR,qDACA,EAKN,iCAIE,+CADA,UAFA,uDAGA,CCrDF,kBACE,aACA,YAEA,6BACE,aACA,YAGA,cADA,iBAEA,eAGF,2BAGE,mBAFA,aACA,YAEA,8BACA,wBALF,2BAMI,sBACA,SACA,8BAIJ,8BACE,aACA,sBACA,wBAHF,8BAII,oBAIJ,wBAYE,gIALA,cAFA,kBACA,gBAHA,gBAOA,UAFA,0BAPA,uDAWA,CACA,wBAbF,wBAiBI,mBADA,QACA,ECkDJ,mEDnEA,wBCoEE,mEAXc,EAcd,4CDvEF,wBCwEI,oBDrDF,wBAnBF,wBAoBI,mBAIJ,8BAWE,gIAJA,gBAFA,gBAIA,UANA,uDAQA,CC4BA,0BDvCF,8BCwCI,gBAGJ,8CD3CA,8BC4CE,+DAXc,EAcd,uBD/CF,8BCgDI,qBDpCF,wBAZF,8BAaI,iBAIJ,uBAIE,qBAGA,YANA,kBAKA,WAJA,SAKA,CAEA,2DASE,mBAPA,WAKA,aAHA,kBAEA,WAGA,CAGF,8BAEE,WADA,SACA,CACA,2CAHF,8BAMI,aAFA,WACA,WACA,EAEF,gEARF,8BAWI,aAFA,UACA,WACA,EAIJ,6BAGE,WADA,UADA,UAEA,CACA,2CAJF,6BAOI,aAFA,UACA,WACA,EAEF,gEATF,6BAaI,aAFA,WADA,UAEA,WACA,EAKN,uBASE,qxJA0FA,CA7FA,YAHA,OAKA,iBAPA,kBACA,MAiGA,0BA9FA,UA8FA","sources":["features/home/Button/Button.module.scss","features/home/Home.module.scss","common/styles/mixins/mixin.scss"],"sourcesContent":["@import '../../../common/styles/mixins/mixin';\r\n\r\n.button {\r\n  cursor: pointer;\r\n  -moz-user-select: none;\r\n  -khtml-user-select: none;\r\n  user-select: none;\r\n\r\n  display: flex;\r\n  align-self: flex-start;\r\n\r\n  padding: 9px 15px 6px;\r\n\r\n  font-family: 'League Spartan', Helvetica, sans-serif;\r\n  font-size: rem(16);\r\n  font-weight: 700;\r\n  color: black;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n\r\n  background: linear-gradient(to bottom, #f9c847, #f9c64782);\r\n  border-radius: 30px;\r\n\r\n  transition: all linear 0.05s;\r\n\r\n  &:active {\r\n    transform: translate3d(0px, 2px, 0);\r\n    box-shadow: #f9c64752 0px 16px 15px -2px;\r\n  }\r\n  @media (max-width: 811px) {\r\n    align-self: unset;\r\n  }\r\n}\r\n\r\n.animationIsLoading {\r\n  transform: translate3d(0, 0, 0);\r\n  opacity: 0;\r\n  box-shadow: #f9c64752 0px 20px 15px 0px;\r\n  animation: animateButton 0.7s ease 1 1.3s forwards;\r\n  @keyframes animateButton {\r\n    0% {\r\n      transform: translate(0, 20px);\r\n    }\r\n\r\n    100% {\r\n      transform: translate(0px, 0px);\r\n      opacity: 1;\r\n    }\r\n  }\r\n}\r\n\r\n.animationIsLoaded {\r\n  transform: translate3d(0, 0, 0);\r\n  //   animation: none;\r\n  opacity: 1;\r\n  box-shadow: #f9c64752 0px 20px 15px 0px;\r\n}\r\n","@import '../../common/styles/mixins/mixin';\r\n\r\n.home {\r\n  display: flex;\r\n  flex-grow: 1;\r\n\r\n  &__container {\r\n    display: flex;\r\n    flex-grow: 1;\r\n\r\n    max-width: 1050px;\r\n    margin: 0 auto;\r\n    padding: 0 15px;\r\n  }\r\n\r\n  &__content {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    @media (max-width: 811px) {\r\n      flex-direction: column;\r\n      gap: 30px;\r\n      justify-content: space-evenly;\r\n    }\r\n  }\r\n\r\n  &__text_block {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media (max-width: 811px) {\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  &__name {\r\n    transform: translate3d(0, 0, 0);\r\n\r\n    margin: 0px 0px 10px 0px;\r\n\r\n    font-size: rem(76);\r\n    font-weight: 700;\r\n    color: #f9c847;\r\n    text-transform: capitalize;\r\n\r\n    opacity: 0;\r\n\r\n    animation: animateTitle 0.7s ease 1 1.1s forwards;\r\n    @media (max-width: 811px) {\r\n      @include adaptiveValue('font-size', 70, 50, 500, 320, 0);\r\n\r\n      margin: 0px;\r\n      font-size: rem(70);\r\n    }\r\n    @media (max-width: 319px) {\r\n      font-size: rem(44); // Galaxy fold\r\n    }\r\n  }\r\n\r\n  &__profession {\r\n    @include adaptiveValue('font-size', 32, 25, 500, 320, 1);\r\n\r\n    transform: translate3d(0, 0, 0);\r\n\r\n    margin: 0px 0px 25px 0px;\r\n\r\n    font-weight: 700;\r\n\r\n    opacity: 0;\r\n\r\n    animation: animateTitle 0.7s ease 1 1.2s forwards;\r\n    @media (max-width: 811px) {\r\n      margin: 0px 0px 15px 0px;\r\n    }\r\n  }\r\n\r\n  &__pic {\r\n    position: relative;\r\n    z-index: 0;\r\n\r\n    display: inline-block;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    &::before,\r\n    &::after {\r\n      content: '';\r\n\r\n      position: absolute;\r\n\r\n      width: 200px;\r\n      height: 200px;\r\n\r\n      background: #f9c847;\r\n    }\r\n\r\n    &::before {\r\n      top: -20px;\r\n      left: 120px;\r\n      @media (max-width: 811px), (max-height: 663px) {\r\n        left: 100px;\r\n        width: 170px;\r\n        height: 170px;\r\n      }\r\n      @media (max-width: 536px) and (max-height: 771px), (max-width: 400px) {\r\n        left: 80px;\r\n        width: 140px;\r\n        height: 140px;\r\n      }\r\n    }\r\n\r\n    &::after {\r\n      z-index: -1;\r\n      top: 240px;\r\n      left: -20px;\r\n      @media (max-width: 811px), (max-height: 663px) {\r\n        top: 200px;\r\n        width: 170px;\r\n        height: 170px;\r\n      }\r\n      @media (max-width: 536px) and (max-height: 771px), (max-width: 400px) {\r\n        top: 160px;\r\n        left: -20px;\r\n        width: 140px;\r\n        height: 140px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__img {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    object-fit: cover;\r\n    background: url('../../assets/img/photo_low.jpg') 100% 100% / cover no-repeat;\r\n\r\n    transition: all linear 0.2s;\r\n  }\r\n}\r\n\r\n.container_pic {\r\n  position: relative;\r\n\r\n  display: inline-block;\r\n\r\n  width: 300px;\r\n  height: 420px;\r\n  margin: 20px 20px 20px 0px;\r\n\r\n  animation: opacityVisible 1.4s linear;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n\r\n    position: absolute;\r\n    // background: rgba(255, 0, 0, 0.435);\r\n    z-index: 1;\r\n    left: -20px;\r\n\r\n    width: 340px;\r\n    height: 232px;\r\n\r\n    background: #1c1d25;\r\n\r\n    animation: animateCurtains 1s ease 1 1.4s forwards;\r\n    @media (max-width: 811px), (max-height: 663px) {\r\n      height: 200px;\r\n    }\r\n    @media (max-width: 536px) and (max-height: 771px), (max-width: 400px) {\r\n      height: 162px;\r\n    }\r\n  }\r\n\r\n  &::before {\r\n    bottom: -21px;\r\n  }\r\n\r\n  &::after {\r\n    top: -21px;\r\n  }\r\n  @media (max-width: 811px) {\r\n    width: 250px;\r\n    height: 350px;\r\n    margin: 20px 0px 20px 0px;\r\n  }\r\n  @media (min-width: 811px) and (max-height: 663px) {\r\n    width: 250px;\r\n    height: 350px;\r\n  }\r\n  @media (max-width: 536px) and (max-height: 771px), (max-width: 400px) {\r\n    width: 200px;\r\n    height: 280px;\r\n  }\r\n}\r\n@keyframes opacityVisible {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n\r\n  99% {\r\n    opacity: 0;\r\n  }\r\n\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes animateTitle {\r\n  0% {\r\n    transform: translate(0, 20px);\r\n  }\r\n\r\n  100% {\r\n    transform: translate(0px, 0px);\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes animateCurtains {\r\n  0% {\r\n    height: 230px;\r\n  }\r\n\r\n  100% {\r\n    height: 0px;\r\n  }\r\n}\r\n","@use 'sass:math';\r\n\r\n// Минимальная ширина страницы\r\n$minWidth: 320;\r\n// Минимальная высота страницы\r\n$minHeight: 350; //301\r\n// Ширина полотна (макета)\r\n$maxWidth: 1920;\r\n// Высота въюпорта максимальная (макета)\r\n// $maxHeight: 1080;\r\n// Ширина ограничивающего контейнера (0 = нет ограничения)\r\n$maxWidthContainer: 1050;\r\n// Общий отступ у контейнера\r\n// (30 = по 15px слева и справа, 0 = нет отступа)\r\n$containerPadding: 30;\r\n// Ширина страбатывания первого брейкпоинта\r\n$containerWidth: $maxWidthContainer + $containerPadding;\r\n\r\n//Адаптивное свойство\r\n//Percent\r\n@function percent($px, $from) {\r\n  $result: math.div($px, $from) * 100%;\r\n  @return $result;\r\n}\r\n//REM\r\n@function rem($px) {\r\n  $result: math.div($px, 16) + rem;\r\n  @return $result;\r\n}\r\n//EM\r\n@function em($px, $current: 16) {\r\n  $result: math.div($px, $current) + em;\r\n  @return $result;\r\n}\r\n@mixin adaptiveValueMaxHeight(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $maxHeight,\r\n  $keepSize: 0\r\n) {\r\n  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) and (max-height: em($maxHeight)) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) and (max-height: em($maxHeight)) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n@mixin adaptiveValue(\r\n  $property,\r\n  $startSize,\r\n  $minSize,\r\n  $widthFrom: $containerWidth,\r\n  $widthTo: $minWidth,\r\n  $keepSize: 0\r\n) {\r\n  @if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {\r\n    $widthFrom: $maxWidth;\r\n  }\r\n  // Брейк-поинты в EM\r\n  $widthFromMedia: em($widthFrom);\r\n  $widthToMedia: em($widthTo);\r\n\r\n  // Формула плавающего значения\r\n  // Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/\r\n  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));\r\n  $yIntersection: -$widthTo * $slope + $minSize;\r\n  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;\r\n\r\n  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};\r\n  // Если работаем с отрицательными значениями, например $startSize меньше $minSize\r\n  @if $minSize>$startSize {\r\n    $propertyValue: #{'clamp(' rem($startSize) ',' $flyValue ',' rem($minSize) ')'};\r\n  }\r\n  @if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {\r\n    @media (min-width: $widthFromMedia) {\r\n      #{$property}: rem($startSize);\r\n    }\r\n  }\r\n  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {\r\n    #{$property}: $propertyValue;\r\n  }\r\n  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {\r\n    @media (max-width: $widthToMedia) {\r\n      #{$property}: rem($minSize);\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}