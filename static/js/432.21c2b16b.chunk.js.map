{"version":3,"file":"static/js/432.21c2b16b.chunk.js","mappings":"6KACA,GAAgB,oBAAsB,sCAAsC,kBAAoB,oCAAoC,gBAAkB,kCAAkC,aAAe,+BAA+B,iBAAmB,oC,SCGnPA,EAAM,CACV,CAAEC,GAAI,EAAGC,YAAa,IAAKC,cAAe,IAAKC,IAAK,IAAKC,QAAS,IAAKC,UAAW,KAClF,CAAEL,GAAI,EAAGC,YAAa,IAAKC,cAAe,IAAKC,IAAK,IAAKC,QAAS,IAAKC,UAAW,KAClF,CAAEL,GAAI,EAAGC,YAAa,IAAKC,cAAe,IAAKC,IAAK,IAAKC,QAAS,IAAKC,UAAW,KAClF,CAAEL,GAAI,EAAGC,YAAa,IAAKC,cAAe,IAAKC,IAAK,IAAKC,QAAS,IAAKC,UAAW,KAClF,CAAEL,GAAI,EAAGC,YAAa,IAAKC,cAAe,IAAKC,IAAK,IAAKC,QAAS,IAAKC,UAAW,KAClF,CAAEL,GAAI,EAAGC,YAAa,IAAKC,cAAe,IAAKC,IAAK,IAAKC,QAAS,IAAKC,UAAW,MAqEpF,EAlEiB,WACf,IACMC,EAAOP,EAAIQ,KAAI,SAAAC,GACnB,OACE,iBAAiBC,UAAWC,EAAAA,cAA5B,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,UACE,gBAAKD,UAAWC,EAAAA,aAAgBC,IAAKH,EAAGL,IAAKS,IAAI,QAEnD,cAAGH,UAAWC,EAAAA,cAAiBG,KAAML,EAAGJ,QAASU,OAAQN,EAAGJ,QAA5D,SACGI,EAAGP,eAEN,cAAGQ,UAAWC,EAAAA,gBAAmBG,KAAML,EAAGH,UAAWS,OAAQN,EAAGH,UAAhE,SACGG,EAAGN,kBAREM,EAAGR,GAYhB,IACD,GAAoCe,EAAAA,EAAAA,UAAiB,GAArD,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAaZ,EAAKa,OAClBC,EAAWJ,EAAa,GAAK,EAAIA,EAAa,EAAIE,EAAa,EAC/DG,EAAYL,IAAeE,EAAa,EAAI,EAAIF,EAAa,EAC7DM,EAAmB,kBAAML,EAAcD,EAAa,GAAK,EAAIA,EAAa,EAAIE,EAAa,EAAxE,EACnBK,EAAoB,kBAAMN,EAAcD,EAAa,EAAIE,EAAa,EAAI,EAAIF,EAAa,EAAvE,EACpBQ,EAAcC,SAASC,cAAc,qBACvCF,GAAaA,EAAYG,iBAAiB,cAAeL,GACzDE,GAAaA,EAAYG,iBAAiB,eAAgBJ,GAC9D,IAAIK,EAAc,EACdC,EAAY,EAkBhB,OAPAJ,SAASE,iBAAiB,cAAc,SAAAG,GACtCF,EAAcE,EAAEC,eAAe,GAAGC,OACnC,IACDP,SAASE,iBAAiB,YAAY,SAAAG,IACpCD,EAAYC,EAAEC,eAAe,GAAGC,SAbhBJ,IACdK,MAAM,gBACNX,KAEEO,EAAYD,IACdK,MAAM,iBACNV,IASH,KAEC,+BACE,oBAASd,UAAWC,EAAAA,SAApB,UACE,gBAAKD,UAAWC,EAAAA,oBAAhB,UACE,iBAAKD,UAAWC,EAAAA,kBAAhB,WACE,eAAID,UAAWC,EAAAA,gBAAmBwB,eAjDhB,WAAQ,EAiD1B,uBAGA,iBAAKzB,UAAWC,EAAAA,iBAAhB,WACE,mBAAQyB,QAASb,EAAjB,6CACA,gBAAKb,UAAWC,EAAAA,KAAhB,SAAyBJ,EAAKc,MAC9B,gBAAKX,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAKU,MAChC,gBAAKP,UAAWC,EAAAA,MAAhB,SAA0BJ,EAAKe,MAC/B,mBAAQc,QAASZ,EAAjB,6DAOb,C","sources":["webpack://portfolio/./src/components/main/projects/Projects.module.scss?7bef","components/main/projects/Projects.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"projects__container\":\"Projects_projects__container__TFHw6\",\"projects__content\":\"Projects_projects__content__um1sG\",\"projects__title\":\"Projects_projects__title__8CNoR\",\"animateTitle\":\"Projects_animateTitle__+xMcI\",\"swiper_container\":\"Projects_swiper_container__NQ5+y\"};","import React, { useState } from 'react'\r\n// import './swiped-events.js'\r\nimport s from './Projects.module.scss'\r\n\r\nconst arr = [\r\n  { id: 1, urlDemoName: '1', urlGithubName: '1', img: '1', urlDemo: '1', urlGithub: '1' },\r\n  { id: 2, urlDemoName: '2', urlGithubName: '2', img: '2', urlDemo: '2', urlGithub: '2' },\r\n  { id: 3, urlDemoName: '3', urlGithubName: '3', img: '3', urlDemo: '3', urlGithub: '3' },\r\n  { id: 4, urlDemoName: '4', urlGithubName: '4', img: '4', urlDemo: '4', urlGithub: '4' },\r\n  { id: 5, urlDemoName: '5', urlGithubName: '5', img: '5', urlDemo: '5', urlGithub: '5' },\r\n  { id: 6, urlDemoName: '6', urlGithubName: '6', img: '6', urlDemo: '6', urlGithub: '6' },\r\n]\r\n\r\nconst Projects = () => {\r\n  const onTitleAnimationEnd = () => {}\r\n  const proj = arr.map(el => {\r\n    return (\r\n      <div key={el.id} className={s.project__item}>\r\n        <div className={s.project__pic}>\r\n          <img className={s.project__img} src={el.img} alt='' />\r\n        </div>\r\n        <a className={s.project__demo} href={el.urlDemo} target={el.urlDemo}>\r\n          {el.urlDemoName}\r\n        </a>\r\n        <a className={s.project__github} href={el.urlGithub} target={el.urlGithub}>\r\n          {el.urlGithubName}\r\n        </a>\r\n      </div>\r\n    )\r\n  })\r\n  const [itemCenter, setItemCenter] = useState<number>(0)\r\n  const projLength = proj.length\r\n  const itemLeft = itemCenter - 1 >= 0 ? itemCenter - 1 : projLength - 1\r\n  const itemRight = itemCenter === projLength - 1 ? 0 : itemCenter + 1\r\n  const onClickSwipeLeft = () => setItemCenter(itemCenter - 1 >= 0 ? itemCenter - 1 : projLength - 1)\r\n  const onClickSwipeRight = () => setItemCenter(itemCenter + 1 > projLength - 1 ? 0 : itemCenter + 1)\r\n  const swiperBlock = document.querySelector('.swiper_container')\r\n  if (swiperBlock) swiperBlock.addEventListener('swiped-left', onClickSwipeLeft)\r\n  if (swiperBlock) swiperBlock.addEventListener('swiped-right', onClickSwipeRight)\r\n  let touchstartX = 0\r\n  let touchendX = 0\r\n  function checkDirection() {\r\n    if (touchendX < touchstartX) {\r\n      alert('swiped left!')\r\n      onClickSwipeLeft()\r\n    }\r\n    if (touchendX > touchstartX) {\r\n      alert('swiped right!')\r\n      onClickSwipeRight()\r\n    }\r\n  }\r\n  document.addEventListener('touchstart', e => {\r\n    touchstartX = e.changedTouches[0].screenX\r\n  })\r\n  document.addEventListener('touchend', e => {\r\n    touchendX = e.changedTouches[0].screenX\r\n    checkDirection()\r\n  })\r\n  return (\r\n    <>\r\n      <section className={s.projects}>\r\n        <div className={s.projects__container}>\r\n          <div className={s.projects__content}>\r\n            <h2 className={s.projects__title} onAnimationEnd={onTitleAnimationEnd}>\r\n              Projects\r\n            </h2>\r\n            <div className={s.swiper_container}>\r\n              <button onClick={onClickSwipeLeft}>влево</button>\r\n              <div className={s.left}>{proj[itemLeft]}</div>\r\n              <div className={s.center}>{proj[itemCenter]}</div>\r\n              <div className={s.right}>{proj[itemRight]}</div>\r\n              <button onClick={onClickSwipeRight}>вправо</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport default Projects\r\n"],"names":["arr","id","urlDemoName","urlGithubName","img","urlDemo","urlGithub","proj","map","el","className","s","src","alt","href","target","useState","itemCenter","setItemCenter","projLength","length","itemLeft","itemRight","onClickSwipeLeft","onClickSwipeRight","swiperBlock","document","querySelector","addEventListener","touchstartX","touchendX","e","changedTouches","screenX","alert","onAnimationEnd","onClick"],"sourceRoot":""}