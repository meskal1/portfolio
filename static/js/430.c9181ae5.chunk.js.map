{"version":3,"file":"static/js/430.c9181ae5.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/components/main/contact/Contact.module.scss?b3af","components/main/contact/Contact.tsx","../node_modules/react-useportal/usePortal.ts","../node_modules/use-ssr/dist/useSSR.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contact_contacts__5FyM5\",\"contacts__container\":\"Contact_contacts__container__tfPMM\",\"contacts__content\":\"Contact_contacts__content__SJ8kY\",\"contacts__text_container\":\"Contact_contacts__text_container__LXttH\",\"contacts__title\":\"Contact_contacts__title__52q8U\",\"animateTitle\":\"Contact_animateTitle__I5ALz\",\"contacts__text\":\"Contact_contacts__text__IWXcK\",\"contacts__form_container\":\"Contact_contacts__form_container__up5xZ\",\"switcher_container\":\"Contact_switcher_container__Nmy3k\",\"switcher\":\"Contact_switcher__KrrFc\",\"contacts__form\":\"Contact_contacts__form__wH0My\",\"contacts__block_input\":\"Contact_contacts__block_input__imN9X\",\"animateInput\":\"Contact_animateInput__aSZRJ\",\"animateHeight\":\"Contact_animateHeight__IGwFZ\",\"animateTextarea\":\"Contact_animateTextarea__ekvOD\",\"contacts__input_name\":\"Contact_contacts__input_name__O-r4v\",\"contacts__label_name\":\"Contact_contacts__label_name__63h6K\",\"placeholder\":\"Contact_placeholder__Sd2iR\",\"contacts__input_email\":\"Contact_contacts__input_email__YuU8o\",\"contacts__label_email\":\"Contact_contacts__label_email__Cu9AD\",\"contacts__label_message\":\"Contact_contacts__label_message__bb7aN\",\"contacts__textarea\":\"Contact_contacts__textarea__V-ix3\",\"contacts__form_button\":\"Contact_contacts__form_button__JgGkI\",\"animationIsLoading\":\"Contact_animationIsLoading__r9SaA\",\"animateButton\":\"Contact_animateButton__6qsVx\",\"animationIsLoaded\":\"Contact_animationIsLoaded__sbrRF\",\"bg_ForAutocompliteText\":\"Contact_bg_ForAutocompliteText__4A53i\",\"fontSizeCyrillic\":\"Contact_fontSizeCyrillic__bWVQ3\",\"errorBorder\":\"Contact_errorBorder__PsPOQ\",\"errorButton\":\"Contact_errorButton__DBobf\",\"animateErrorButton\":\"Contact_animateErrorButton__27kdw\",\"modalContainer\":\"Contact_modalContainer__OILnd\",\"animateModalBG\":\"Contact_animateModalBG__w8EH9\",\"modalText\":\"Contact_modalText__YvW-X\",\"animateModalText\":\"Contact_animateModalText__1zvoe\"};","import React, { ChangeEvent, MouseEvent, useEffect, useState, KeyboardEvent } from 'react'\r\nimport usePortal from 'react-useportal'\r\nimport s from './Contact.module.scss'\r\n\r\nconst cyrillicChar = /[а-яёА-ЯЁ]/\r\nconst validEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[ a-zA-Z0-9-]+(?:\\.[ a-zA-Z0-9-]+) *$/\r\n\r\nconst Contact = () => {\r\n  console.log('rendered contact')\r\n  const { openPortal, closePortal, isOpen, Portal } = usePortal({ bindTo: document.getElementById('wrapper')! })\r\n  const [isChecked, setIsChecked] = useState<boolean>(localStorage.getItem('isOffAutocomplite') === 'on')\r\n  const [isAnimationLoaded, setIsAnimationLoaded] = useState(s.animationIsLoading)\r\n  const [errorStyleButton, setErrorStyleButton] = useState<string>('')\r\n  const [errorStyleName, setErrorStyleName] = useState<string>('')\r\n  const [errorStyleEmail, setErrorStyleEmail] = useState<string>('')\r\n  const [errorStyleText, setErrorStyleText] = useState<string>('')\r\n  const [cyrillicStyleName, setCyrillicStyleName] = useState<string>('')\r\n  const [cyrillicStyleText, setCyrillicStyleText] = useState<string>('')\r\n  const [nameState, setNameState] = useState<string>(sessionStorage.getItem('nameState') || '')\r\n  const [emailState, setEmailState] = useState<string>(sessionStorage.getItem('emailState') || '')\r\n  const [textState, setTextState] = useState<string>(sessionStorage.getItem('textState') || '')\r\n  const autocomplite = isChecked ? 'on' : 'off'\r\n\r\n  const onChangeAutocomplite = () => {\r\n    setIsChecked(!isChecked)\r\n    localStorage.setItem('isOffAutocomplite', `${!isChecked ? 'on' : 'off'}`)\r\n  }\r\n  const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const validate = e.currentTarget.value\r\n      .replace(/[^a-zA-Zа-яёА-ЯЁ -]/, '')\r\n      .slice(0, 50)\r\n      .trimStart()\r\n    setNameState(validate)\r\n    sessionStorage.setItem('nameState', validate.trimEnd())\r\n  }\r\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const validate = e.currentTarget.value\r\n      .replace(/[а-яёА-ЯЁ]/, '')\r\n      .slice(0, 200)\r\n      .trimStart()\r\n    setEmailState(validate)\r\n    sessionStorage.setItem('emailState', validate.trimEnd())\r\n  }\r\n  const onChangeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const validate = e.currentTarget.value.slice(0, 3000).trimStart()\r\n    setTextState(validate)\r\n    sessionStorage.setItem('textState', validate.trimEnd())\r\n  }\r\n  const onClickButton = (e: MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (!nameState || !emailState || !textState || !emailState.match(validEmail)) {\r\n      setErrorStyleButton(s.errorButton)\r\n    } else {\r\n      document.querySelector('body')?.style.setProperty('overflow', 'hidden')\r\n      openPortal(e)\r\n      setTimeout(() => {\r\n        closePortal()\r\n        document.querySelector('body')?.removeAttribute('style')\r\n        setNameState('')\r\n        setEmailState('')\r\n        setTextState('')\r\n        sessionStorage.clear()\r\n      }, 2000)\r\n    }\r\n    if (!nameState) setErrorStyleName(s.errorBorder)\r\n    if (!emailState || !emailState.match(validEmail)) setErrorStyleEmail(s.errorBorder)\r\n    if (!textState) setErrorStyleText(s.errorBorder)\r\n  }\r\n  const onKeyDownInput = (e: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && e.currentTarget.id === 'name') {\r\n      e.preventDefault()\r\n      const emailField = document.getElementById('email')\r\n      if (emailField && nameState) emailField.focus()\r\n    }\r\n    if (e.key === 'Enter' && e.currentTarget.id === 'email') {\r\n      e.preventDefault()\r\n      const messageField = document.getElementById('messageContact')\r\n      if (messageField && emailState) messageField.focus()\r\n    }\r\n    if (!e.shiftKey && e.key === 'Enter' && e.currentTarget.id === 'messageContact') {\r\n      e.preventDefault()\r\n      if (nameState && emailState && textState) {\r\n        onClickButton(e)\r\n        e.currentTarget.blur()\r\n      }\r\n    }\r\n  }\r\n  const onAnimationEndButton = () => {\r\n    setIsAnimationLoaded(s.animationIsLoaded)\r\n    setErrorStyleButton('')\r\n  }\r\n  const onBlurEmail = () => {\r\n    if (!emailState.match(validEmail) && emailState) setErrorStyleEmail(s.errorBorder)\r\n  }\r\n  useEffect(() => {\r\n    if (nameState.match(cyrillicChar) && cyrillicStyleName === '') setCyrillicStyleName(s.fontSizeCyrillic)\r\n    if (!nameState.match(cyrillicChar) && cyrillicStyleName !== '') setCyrillicStyleName('')\r\n    if (textState.match(cyrillicChar) && cyrillicStyleText === '') setCyrillicStyleText(s.fontSizeCyrillic)\r\n    if (!textState.match(cyrillicChar) && cyrillicStyleText !== '') setCyrillicStyleText('')\r\n    if (nameState && errorStyleName !== '') setErrorStyleName('')\r\n    if (emailState && errorStyleEmail !== '' && emailState.match(validEmail)) setErrorStyleEmail('')\r\n    if (textState && errorStyleText !== '') setErrorStyleText('')\r\n  }, [nameState, emailState, textState, cyrillicStyleName, cyrillicStyleText])\r\n\r\n  return (\r\n    <>\r\n      <section className={s.contacts}>\r\n        <div className={s.contacts__container}>\r\n          <div className={s.contacts__content}>\r\n            <div className={s.contacts__text_container}>\r\n              <h2 className={s.contacts__title}>Contact</h2>\r\n              <p className={s.contacts__text}>Contact me if you have a job or just say hi :)</p>\r\n            </div>\r\n            <div className={s.contacts__form_container}>\r\n              <label className={s.switcher_container} htmlFor='checkbox'>\r\n                autocomplete\r\n                <input type='checkbox' id='checkbox' onChange={onChangeAutocomplite} checked={isChecked} />\r\n                <span className={s.switcher}></span>\r\n              </label>\r\n              <form className={s.contacts__form} id='contacts'>\r\n                <div className={s.contacts__block_input}>\r\n                  <label className={s.bg_ForAutocompliteText}></label>\r\n                  <input\r\n                    id='name'\r\n                    type='text'\r\n                    value={nameState}\r\n                    name='name'\r\n                    className={`${s.contacts__input_name} ${cyrillicStyleName} ${errorStyleName}`}\r\n                    onChange={onChangeName}\r\n                    onKeyDown={onKeyDownInput}\r\n                    autoComplete={autocomplite}\r\n                    required\r\n                  />\r\n                  <label className={s.contacts__label_name}>NAME</label>\r\n                  <label className={s.placeholder} htmlFor='name'>\r\n                    NAME\r\n                  </label>\r\n                </div>\r\n                <div className={s.contacts__block_input}>\r\n                  <label className={s.bg_ForAutocompliteText}></label>\r\n                  <input\r\n                    id='email'\r\n                    type='text'\r\n                    value={emailState}\r\n                    name='email'\r\n                    className={`${s.contacts__input_email} ${errorStyleEmail}`}\r\n                    onChange={onChangeEmail}\r\n                    onKeyDown={onKeyDownInput}\r\n                    onBlur={onBlurEmail}\r\n                    autoComplete={autocomplite}\r\n                    required\r\n                  />\r\n                  <label className={s.contacts__label_email}>EMAIL</label>\r\n                  <label className={s.placeholder} htmlFor='email'>\r\n                    EMAIL\r\n                  </label>\r\n                </div>\r\n                <div className={s.contacts__block_input}>\r\n                  <textarea\r\n                    id='messageContact'\r\n                    value={textState}\r\n                    name='message'\r\n                    className={`${s.contacts__textarea} ${cyrillicStyleText} ${errorStyleText}`}\r\n                    onChange={onChangeText}\r\n                    onKeyDown={onKeyDownInput}\r\n                    required\r\n                  />\r\n                  <label className={s.contacts__label_message}>MESSAGE</label>\r\n                  <label className={s.placeholder} htmlFor='message'>\r\n                    MESSAGE\r\n                  </label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {isOpen && (\r\n              <Portal>\r\n                <div className={s.modalContainer}>\r\n                  <span className={s.modalText}>Successfully sent</span>\r\n                </div>\r\n              </Portal>\r\n            )}\r\n            <button\r\n              type='button'\r\n              form='contacts'\r\n              className={`${s.contacts__form_button} ${errorStyleButton} ${isAnimationLoaded}`}\r\n              onClick={onClickButton}\r\n              onAnimationEnd={onAnimationEndButton}>\r\n              SEND ME MESSAGE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\nexport default Contact\r\n","import { useState, useRef, useEffect, useCallback, useMemo, ReactNode, DOMAttributes, SyntheticEvent, MutableRefObject, MouseEvent } from 'react'\nimport { createPortal, findDOMNode } from 'react-dom'\nimport useSSR from 'use-ssr'\n\ntype HTMLElRef = MutableRefObject<HTMLElement>\ntype CustomEvent = {\n  event?: SyntheticEvent<any, Event>\n  portal: HTMLElRef\n  targetEl: HTMLElRef\n} & SyntheticEvent<any, Event>\n\ntype CustomEventHandler = (customEvent: CustomEvent) => void\ntype CustomEventHandlers = {\n  [K in keyof DOMAttributes<K>]?: CustomEventHandler\n}\n\ntype EventListenerMap = { [K in keyof DOMAttributes<K>]: keyof GlobalEventHandlersEventMap }\ntype EventListenersRef = MutableRefObject<{\n  [K in keyof DOMAttributes<K>]?: (event: SyntheticEvent<any, Event>) => void\n}>\n\nexport type UsePortalOptions = {\n  closeOnOutsideClick?: boolean\n  closeOnEsc?: boolean\n  bindTo?: HTMLElement // attach the portal to this node in the DOM\n  isOpen?: boolean\n  onOpen?: CustomEventHandler\n  onClose?: CustomEventHandler\n  onPortalClick?: CustomEventHandler\n} & CustomEventHandlers\n\ntype UsePortalObjectReturn = {} // TODO\ntype UsePortalArrayReturn = [] // TODO\n\nexport const errorMessage1 = 'You must either add a `ref` to the element you are interacting with or pass an `event` to openPortal(e) or togglePortal(e).'\n\nexport default function usePortal({\n  closeOnOutsideClick = true,\n  closeOnEsc = true,\n  bindTo, // attach the portal to this node in the DOM\n  isOpen: defaultIsOpen = false,\n  onOpen,\n  onClose,\n  onPortalClick,\n  ...eventHandlers\n}: UsePortalOptions = {}): any {\n  const { isServer, isBrowser } = useSSR()\n  const [isOpen, makeOpen] = useState(defaultIsOpen)\n  // we use this ref because `isOpen` is stale for handleOutsideMouseClick\n  const open = useRef(isOpen)\n\n  const setOpen = useCallback((v: boolean) => {\n    // workaround to not have stale `isOpen` in the handleOutsideMouseClick\n    open.current = v\n    makeOpen(v)\n  }, [])\n\n  const targetEl = useRef() as HTMLElRef // this is the element you are clicking/hovering/whatever, to trigger opening the portal\n  const portal = useRef(isBrowser ? document.createElement('div') : null) as HTMLElRef\n\n  useEffect(() => {\n    if (isBrowser && !portal.current) portal.current = document.createElement('div')\n  }, [isBrowser, portal])\n\n  const elToMountTo = useMemo(() => {\n    if (isServer) return\n    return (bindTo && findDOMNode(bindTo)) || document.body\n  }, [isServer, bindTo])\n\n  const createCustomEvent = (e: any) => {\n    if (!e) return { portal, targetEl, event: e }\n    const event = e || {}\n    if (event.persist) event.persist()\n    event.portal = portal\n    event.targetEl = targetEl\n    event.event = e\n    const { currentTarget } = e\n    if (!targetEl.current && currentTarget && currentTarget !== document) targetEl.current = event.currentTarget\n    return event\n  }\n\n  // this should handle all eventHandlers like onClick, onMouseOver, etc. passed into the config\n  const customEventHandlers: CustomEventHandlers = Object\n    .entries(eventHandlers)\n    .reduce<any>((acc, [handlerName, eventHandler]) => {\n      acc[handlerName] = (event?: SyntheticEvent<any, Event>) => {\n        if (isServer) return\n        eventHandler(createCustomEvent(event))\n      }\n      return acc\n    }, {})\n\n  const openPortal = useCallback((e: any) => {\n    if (isServer) return\n    const customEvent = createCustomEvent(e)\n    // for some reason, when we don't have the event argument, there\n    // is a weird race condition. Would like to see if we can remove\n    // setTimeout, but for now this works\n    if (targetEl.current == null) {\n      setTimeout(() => setOpen(true), 0)\n      throw Error(errorMessage1)\n    }\n    if (onOpen) onOpen(customEvent)\n    setOpen(true)\n  }, [isServer, portal, setOpen, targetEl, onOpen])\n\n  const closePortal = useCallback((e: any) => {\n    if (isServer) return\n    const customEvent = createCustomEvent(e)\n    if (onClose && open.current) onClose(customEvent)\n    if (open.current) setOpen(false)\n  }, [isServer, onClose, setOpen])\n\n  const togglePortal = useCallback((e: SyntheticEvent<any, Event>): void => \n    open.current ? closePortal(e) : openPortal(e),\n    [closePortal, openPortal]\n  )\n\n  const handleKeydown = useCallback((e: KeyboardEvent): void => \n    (e.key === 'Escape' && closeOnEsc) ? closePortal(e) : undefined,\n    [closeOnEsc, closePortal]\n  )\n\n  const handleOutsideMouseClick = useCallback((e: MouseEvent): void => {\n    const containsTarget = (target: HTMLElRef) => target.current.contains(e.target as HTMLElement)\n    if (containsTarget(portal) || (e as any).button !== 0 || !open.current || containsTarget(targetEl)) return\n    if (closeOnOutsideClick) closePortal(e)\n  }, [isServer, closePortal, closeOnOutsideClick, portal])\n\n  const handleMouseDown = useCallback((e: MouseEvent): void => {\n    if (isServer || !(portal.current instanceof HTMLElement)) return\n    const customEvent = createCustomEvent(e)\n    if (portal.current.contains(customEvent.target as HTMLElement) && onPortalClick) onPortalClick(customEvent)\n    handleOutsideMouseClick(e)\n  }, [handleOutsideMouseClick])\n\n  // used to remove the event listeners on unmount\n  const eventListeners = useRef({}) as EventListenersRef\n\n  useEffect(() => {\n    if (isServer) return\n    if (!(elToMountTo instanceof HTMLElement) || !(portal.current instanceof HTMLElement)) return\n\n    // TODO: eventually will need to figure out a better solution for this.\n    // Surely we can find a way to map onScroll/onWheel -> scroll/wheel better,\n    // but for all other event handlers. For now this works.\n    const eventHandlerMap: EventListenerMap = {\n      onScroll: 'scroll',\n      onWheel: 'wheel',\n    }\n    const node = portal.current\n    elToMountTo.appendChild(portal.current)\n    // handles all special case handlers. Currently only onScroll and onWheel\n    Object.entries(eventHandlerMap).forEach(([handlerName /* onScroll */, eventListenerName /* scroll */]) => {\n      if (!eventHandlers[handlerName as keyof EventListenerMap]) return\n      eventListeners.current[handlerName as keyof EventListenerMap] = (e: any) => (eventHandlers[handlerName as keyof EventListenerMap] as any)(createCustomEvent(e))\n      document.addEventListener(eventListenerName as keyof GlobalEventHandlersEventMap, eventListeners.current[handlerName as keyof EventListenerMap] as any)\n    })\n    document.addEventListener('keydown', handleKeydown)\n    document.addEventListener('mousedown', handleMouseDown as any)\n\n    return () => {\n      // handles all special case handlers. Currently only onScroll and onWheel\n      Object.entries(eventHandlerMap).forEach(([handlerName, eventListenerName]) => {\n        if (!eventHandlers[handlerName as keyof EventListenerMap]) return\n        document.removeEventListener(eventListenerName as keyof GlobalEventHandlersEventMap, eventListeners.current[handlerName as keyof EventListenerMap] as any)\n        delete eventListeners.current[handlerName as keyof EventListenerMap]\n      })\n      document.removeEventListener('keydown', handleKeydown)\n      document.removeEventListener('mousedown', handleMouseDown as any)\n      elToMountTo.removeChild(node)\n    }\n  }, [isServer, handleOutsideMouseClick, handleKeydown, elToMountTo, portal])\n\n  const Portal = useCallback(({ children }: { children: ReactNode }) => {\n    if (portal.current != null) return createPortal(children, portal.current)\n    return null\n  }, [portal])\n\n  return Object.assign(\n    [openPortal, closePortal, open.current, Portal, togglePortal, targetEl, portal],\n    {\n      isOpen: open.current,\n      openPortal,\n      ref: targetEl,\n      closePortal,\n      togglePortal,\n      Portal,\n      portalRef: portal,\n      ...customEventHandlers,\n      bind: { // used if you want to spread all html attributes onto the target element\n        ref: targetEl,\n        ...customEventHandlers\n      }\n    }\n  )\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Device;\n(function (Device) {\n    Device[\"Browser\"] = \"browser\";\n    Device[\"Server\"] = \"server\";\n    Device[\"Native\"] = \"native\";\n})(Device = exports.Device || (exports.Device = {}));\nvar Browser = Device.Browser, Server = Device.Server, Native = Device.Native;\nvar canUseDOM = !!(typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement);\nvar canUseNative = typeof navigator != 'undefined' && navigator.product == 'ReactNative';\nvar device = canUseNative ? Native : canUseDOM ? Browser : Server;\nvar SSRObject = {\n    isBrowser: device === Browser,\n    isServer: device === Server,\n    isNative: device === Native,\n    device: device,\n    canUseWorkers: typeof Worker !== 'undefined',\n    canUseEventListeners: device === Browser && !!window.addEventListener,\n    canUseViewport: device === Browser && !!window.screen,\n};\n// TODO: instead of this, do a polyfill for `Object.assign` https://www.npmjs.com/package/es6-object-assign\nvar assign = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.reduce(function (acc, obj) { return (__assign(__assign({}, acc), obj)); }, {});\n};\nvar values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\nvar toArrayObject = function () { return assign((values(SSRObject), SSRObject)); };\nvar useSSRObject = toArrayObject();\nexports.weAreServer = function () {\n    SSRObject.isServer = true;\n    useSSRObject = toArrayObject();\n};\nexports.useSSR = function () { return useSSRObject; };\nexports.default = exports.useSSR;\n"],"names":["cyrillicChar","validEmail","console","log","usePortal","bindTo","document","getElementById","openPortal","closePortal","isOpen","Portal","useState","localStorage","getItem","isChecked","setIsChecked","s","isAnimationLoaded","setIsAnimationLoaded","errorStyleButton","setErrorStyleButton","errorStyleName","setErrorStyleName","errorStyleEmail","setErrorStyleEmail","errorStyleText","setErrorStyleText","cyrillicStyleName","setCyrillicStyleName","cyrillicStyleText","setCyrillicStyleText","sessionStorage","nameState","setNameState","emailState","setEmailState","textState","setTextState","autocomplite","onClickButton","e","match","querySelector","style","setProperty","setTimeout","removeAttribute","clear","onKeyDownInput","key","currentTarget","id","preventDefault","emailField","focus","messageField","shiftKey","blur","useEffect","className","htmlFor","type","onChange","setItem","checked","value","name","validate","replace","slice","trimStart","trimEnd","onKeyDown","autoComplete","required","onBlur","form","onClick","onAnimationEnd","exports","_a","closeOnOutsideClick","_c","closeOnEsc","_d","defaultIsOpen","onOpen","onClose","onPortalClick","eventHandlers","isServer","isBrowser","makeOpen","open","react_1","setOpen","v","current","targetEl","portal","createElement","elToMountTo","react_dom_1","body","createCustomEvent","event","persist","customEventHandlers","Object","entries","reduce","acc","handlerName","eventHandler","customEvent","Error","togglePortal","handleKeydown","undefined","handleOutsideMouseClick","containsTarget","target","contains","button","handleMouseDown","HTMLElement","eventListeners","eventHandlerMap","onScroll","onWheel","node","appendChild","forEach","eventListenerName","addEventListener","removeEventListener","removeChild","children","assign","__assign","ref","portalRef","bind","Device","this","t","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","Browser","Server","Native","canUseDOM","window","device","navigator","product","SSRObject","isNative","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","toArrayObject","args","_i","obj","keys","map","useSSRObject","weAreServer","useSSR"],"sourceRoot":""}