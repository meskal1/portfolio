@import '../../common/styles/mixins/mixin';

.projects {
  display: flex;
  flex-grow: 1;

  &__container {
    display: flex;
    flex-grow: 1;
    justify-content: center;

    max-width: 1050px;
    margin: 0 auto;
    padding: 0 15px;
  }

  &__content {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 20px;
    align-items: center;
    justify-content: center;
  }

  &__title {
    transform: translate3d(0, 0, 0);

    font-size: rem(50);
    font-weight: 700;
    text-transform: capitalize;

    opacity: 0;

    animation: animateTitle 0.7s ease 1 1.1s forwards;
  }
}

.swiper_container {
  @include adaptiveValue('gap', 10, 0, 300, 280, 1);

  position: relative;

  display: flex;
  align-items: center;
  justify-content: space-between;
  // Что бы убрать багу когда резко переключаеш вкладку виден контент слайдер
  // происходит при 1й загрузке страницы
  animation: opacityVisible 1.6s linear;

  &::before {
    content: '';

    position: absolute;
    z-index: 1;
    top: 0px;
    left: 0px;

    width: 50%;
    height: 100%;

    background: white;
    background: #1c1d25;
  }

  &::after {
    content: '';

    position: absolute;
    top: 0px;
    right: 0px;

    width: 50%;
    height: 100%;

    background: white;
    background: #1c1d25;
  }
}

.curtainsMove {
  &::before {
    animation: curtainsLeft 0.7s linear forwards;
  }

  &::after {
    animation: curtainsRight 0.7s linear forwards;
  }
}

.swiper_items_container {
  @include adaptiveValue('padding-right', 185, 0, 665, 310, 1);
  @include adaptiveValue('padding-left', 185, 0, 665, 310, 1);

  overflow: hidden;
  // border: 1px solid green;
  display: grid;
  padding: 30px 185px 50px;

  .swipeItem {
    grid-area: 1 / -1;
  }
}

.project__item {
  position: relative;
  transform-style: preserve-3d;
  transform: perspective(1000px) translate3d(calc(100% * var(--offset)), 0, 0)
    rotateY(calc(-45deg * var(--dir))) scale(0.95);

  width: 190px;
  height: 250px;

  opacity: 0.5;

  transition: transform 0.5s ease-in-out;
}

.swipeItem[data-active] {
  .project__item {
    opacity: 1;
  }
}

.project__img {
  cursor: pointer;

  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  object-fit: fill;
  border: 1px solid black;
  border-radius: 10px;
}

.project__img_loader {
  &::before {
    content: '';

    position: absolute;
    top: 50%;
    left: 50%;
    transform-origin: left top;
    transform: translate(-50%, -50%);

    width: 45px;
    height: 45px;

    border: 1px solid #ccc;
    border-top-color: black;
    border-radius: 50%;

    animation: spinner 0.6s linear infinite;
  }
}
@keyframes spinner {
  100% {
    rotate: 360deg;
  }
}

.project__text {
  position: absolute;
  top: -30px;
  transform: translate3d(0, 0, 0);

  width: 100%;
  padding: 1px 15px 0px;

  font-size: rem(20);
  color: white;
  text-align: center;

  background: black;
  border-radius: 30px 10px;

  &::after {
    content: '';

    position: absolute;
    top: 0px;
    right: 0px;
    transform: translate3d(0, 0, 0);

    height: 100%;

    background: #23242e;
    border-radius: 30px 10px;

    animation: transformBgItem 0.6s linear 0.5s forwards;
  }

  &::before {
    content: '';

    position: absolute;
    top: 0px;
    right: -1px;
    transform: translate3d(0, 0, 0);

    width: 101%;
    height: 100%;

    background: #1c1d25;
    border-radius: 30px 10px;

    animation: opacityInvisible 0.35s linear 0.5s forwards;
  }
}

.project__demo {
  bottom: -25px;
  transform: translate3d(0, 0, 0);

  &::after {
    transform: translate3d(0, 0, 0);
    animation: transformBgItem 0.6s linear 0.7s forwards;
  }

  &::before {
    transform: translate3d(0, 0, 0);
    animation: opacityInvisible 0.35s linear 0.7s forwards;
  }
}

.project__github {
  bottom: -50px;
  transform: translate3d(0, 0, 0);
  text-transform: capitalize;

  &::after {
    transform: translate3d(0, 0, 0);
    animation: transformBgItem 0.6s linear 0.9s forwards;
  }

  &::before {
    transform: translate3d(0, 0, 0);
    animation: opacityInvisible 0.35s linear 0.9s forwards;
  }
}

.project__demo,
.project__github {
  position: absolute;

  align-self: flex-start;

  width: 100%;
  padding: 1px 10px 0px;

  font-size: rem(16);
  color: #b0b2c3;

  background: black;
  border-radius: 30px 10px;

  transition: all linear 0.2s;

  &::after {
    content: '';

    position: absolute;
    top: 0px;
    right: 0px;

    height: 100%;

    background: #23242e;
    border-radius: 30px 10px;
  }

  &::before {
    content: '';

    position: absolute;
    top: 0px;
    right: -1px;

    width: 101%;
    height: 103%;

    background: #1c1d25;
    border-radius: 30px 10px;
  }

  &:hover {
    color: #f9c847;
  }
}

.left_button,
.right_button {
  cursor: pointer;

  position: relative;

  width: 30px;
  height: 70px;

  background: transparent;

  &::before {
    content: '';

    position: absolute;

    width: 3px;
    height: 40px;

    background: #f9c655;
    border-radius: 30px;
  }

  &::after {
    content: '';

    position: absolute;

    width: 3px;
    height: 40px;

    background: #f9c655;
    border-radius: 30px;
  }
}

.left_button {
  &::before {
    transform: rotate(30deg) translate(-20px, -31px);
  }

  &::after {
    transform: rotate(-30deg) translate(0px, -4px);
  }
}

.right_button {
  &::before {
    transform: rotate(-30deg) translate(17px, -33px);
  }

  &::after {
    transform: rotate(30deg) translate(-3px, -2px);
  }
}
@keyframes curtainsLeft {
  0% {
    transform: translate3d(0px, 0px, 0px);
  }

  100% {
    transform: translate3d(-350px, 0px, 0px);
  }
}
@keyframes curtainsRight {
  0% {
    transform: translate3d(0px, 0px, 0px);
  }

  100% {
    transform: translate3d(350px, 0px, 0px);
  }
}
@keyframes opacityVisible {
  0% {
    opacity: 0;
  }

  99% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
@keyframes opacityInvisible {
  99% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}
@keyframes transformBgItem {
  0% {
    left: 0;
    width: 0%;
  }

  50% {
    width: 100%;
  }

  100% {
    width: 0%;
  }
}
@keyframes animateTitle {
  0% {
    transform: translate(0, 20px);
  }

  100% {
    transform: translate(0px, 0px);
    opacity: 1;
  }
}
